{"version":3,"sources":["App.js","data.js","reportWebVitals.js","index.js"],"names":["dataSource","DataSource","store","ArrayStore","data","ID","Head_ID","Department","Location","Budget","reshapeOnPush","App","values","useMemo","onContentReady","useCallback","e","component","isNotFirstLoad","getSummary","getRootNode","getDataSource","load","done","items","lastId","length","changes","i","push","type","node","result","hasChildren","children","forEach","n","item","index","id","autoExpandAll","showRowLines","showBorders","columnAutoWidth","repaintChangesOnly","keyExpr","parentIdExpr","onRowPrepared","rowType","includes","rowElement","style","backgroundColor","dataField","format","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0b4f96c.chunk.js","sourcesContent":["\r\nimport React, { useCallback, useMemo } from 'react';\r\n\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport './App.css';\r\n\r\nimport ArrayStore from 'devextreme/data/array_store';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport { TreeList, Column } from 'devextreme-react/tree-list';\r\n\r\n\r\nimport { departments } from './data.js';\r\n\r\nconst dataSource = new DataSource({\r\n    store: new ArrayStore({\r\n        data: departments\r\n    }),\r\n    reshapeOnPush: true\r\n});\r\n\r\nfunction App() {\r\n    \r\n    var values = useMemo(()=>[]);\r\n  \r\n\r\n    const onContentReady = useCallback((e) => {\r\n        if (e.component.isNotFirstLoad) return;\r\n        e.component.isNotFirstLoad = true;\r\n        getSummary(e.component.getRootNode());\r\n\r\n        var store = e.component.getDataSource().store();\r\n        store.load().done((items) => {\r\n            let lastId = items[items.length - 1].ID + 1;\r\n\r\n            let changes = [];\r\n            for (let i = 0; i < values.length; i++) {\r\n\r\n                changes.push({\r\n                    type: \"insert\",\r\n                    data: {\r\n                        ID: lastId,\r\n                        Head_ID: values[i].Head_ID,\r\n                        Department: values[i].Department,\r\n                        Budget: values[i].Budget\r\n                    }\r\n                });\r\n                lastId++;\r\n            }\r\n            store.push(changes);\r\n        });\r\n    })\r\n\r\n    const onRowPrepared = (e) => {\r\n        if (e.rowType === \"data\" && e.values[0].includes(\"=\")) {\r\n            e.rowElement.style.backgroundColor = \"#E8E8E8\";\r\n        }\r\n    }\r\n\r\n    const getSummary = (node) => {\r\n        let result = [0, 0];\r\n        if (node.hasChildren) {\r\n            node.children.forEach(function (n) {\r\n                result[0] = result[0] + 1; //count\r\n                result[1] += n.data.Budget; //sum\r\n                getSummary(n).forEach(function (item, index) {\r\n                    result[index] += item;\r\n                });\r\n            });\r\n        }\r\n        if (result[0] > 0) {\r\n            if (node.data) {\r\n                values.push({\r\n                    Department: node.data.Department + \" Count = \" + result[0],\r\n                    Head_ID: node.data.ID,\r\n                    Budget: result[1]\r\n                });\r\n            } else\r\n                values.push({\r\n                    Department: \"Overall Count = \" + result[0],\r\n                    Head_ID: 0,\r\n                    Budget: result[1]\r\n                });\r\n        }\r\n        return result;\r\n    }\r\n\r\n        return (\r\n            <TreeList\r\n                id=\"departments\"\r\n                dataSource={dataSource}\r\n                autoExpandAll={true}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                repaintChangesOnly={true}\r\n                keyExpr=\"ID\"\r\n                parentIdExpr=\"Head_ID\"      \r\n                onContentReady={onContentReady}\r\n                onRowPrepared={onRowPrepared}\r\n            >\r\n                <Column\r\n                    dataField=\"Department\"\r\n                />\r\n                <Column\r\n                    dataField=\"Location\" />\r\n                <Column\r\n                    dataField=\"Budget\"\r\n                    format=\"currency\" />\r\n            </TreeList>\r\n        );\r\n    \r\n}\r\n\r\nexport default App;\r\n","export const departments = [\r\n    {\r\n        ID: 1,\r\n        Head_ID: 0,\r\n        Department: \"Corporate Headquarters\",\r\n        Location: \"Monterey\",\r\n        Budget: 1000000\r\n    },\r\n    {\r\n        ID: 2,\r\n        Head_ID: 1,\r\n        Department: \"Sales and Marketing\",\r\n        Location: \"San Francisco\",\r\n        Budget: 22000\r\n    },\r\n    {\r\n        ID: 3,\r\n        Head_ID: 1,\r\n        Department: \"Finance\",\r\n        Location: \"Monterey\",\r\n        Budget: 40000\r\n    },\r\n    {\r\n        ID: 4,\r\n        Head_ID: 1,\r\n        Department: \"Engineering\",\r\n        Location: \"Monterey\",\r\n        Budget: 1100000\r\n    },\r\n    {\r\n        ID: 5,\r\n        Head_ID: 2,\r\n        Department: \"Field Office: Canada\",\r\n        Location: \"Toronto\",\r\n        Budget: 500000\r\n    },\r\n    {\r\n        ID: 6,\r\n        Head_ID: 2,\r\n        Department: \"Field Office: East Coast\",\r\n        Location: \"Boston\",\r\n        Budget: 500000\r\n    },\r\n    {\r\n        ID: 7,\r\n        Head_ID: 2,\r\n        Department: \"Pacific Rim Headquarters\",\r\n        Location: \"Kuaui\",\r\n        Budget: 600000\r\n    },\r\n    {\r\n        ID: 8,\r\n        Head_ID: 2,\r\n        Department: \"Marketing\",\r\n        Location: \"San Francisco\",\r\n        Budget: 1500000\r\n    },\r\n    {\r\n        ID: 9,\r\n        Head_ID: 7,\r\n        Department: \"Field Office: Singapore\",\r\n        Location: \"Singapore\",\r\n        Budget: 300000\r\n    },\r\n    {\r\n        ID: 10,\r\n        Head_ID: 7,\r\n        Department: \"Field Office: Japan\",\r\n        Location: \"Tokyo\",\r\n        Budget: 500000\r\n    },\r\n    {\r\n        ID: 11,\r\n        Head_ID: 4,\r\n        Department: \"Consumer Electronics Div.\",\r\n        Location: \"Burlington, VT\",\r\n        Budget: 1150000\r\n    },\r\n    {\r\n        ID: 12,\r\n        Head_ID: 4,\r\n        Department: \"Software Products Div.\",\r\n        Location: \"Monterey\",\r\n        Budget: 1200000\r\n    },\r\n    {\r\n        ID: 13,\r\n        Head_ID: 11,\r\n        Department: \"Software Development\",\r\n        Location: \"Monterey\",\r\n        Budget: 40000\r\n    },\r\n    {\r\n        ID: 14,\r\n        Head_ID: 12,\r\n        Department: \"Quality Assurance\",\r\n        Location: \"Monterey\",\r\n        Budget: 48000\r\n    },\r\n    {\r\n        ID: 15,\r\n        Head_ID: 12,\r\n        Department: \"Customer Support\",\r\n        Location: \"Monterey\",\r\n        Budget: 38000\r\n    },\r\n    {\r\n        ID: 16,\r\n        Head_ID: 12,\r\n        Department: \"Research and Development\",\r\n        Location: \"Burlington, VT\",\r\n        Budget: 460000\r\n    },\r\n    {\r\n        ID: 17,\r\n        Head_ID: 12,\r\n        Department: \"Customer Services\",\r\n        Location: \"Burlington, VT\",\r\n        Budget: 850000\r\n    }\r\n];\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}